@page "/Prioridad"

@inject HttpClient httpClient

<EditForm Model="id" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header">
                <h3>Registro de Prioridades</h3>
            </div>

            <div class="card-body">
                @*SistemaId*@
                <div class="col-xs-12 col-sm-12 col-md-8 col-lg-6 col-xl-4">
                    <div class="input-group mb-3">
                        <InputNumber @bind-Value="prioridad.PrioridadId" class="form-control" aria-describedby="buscarButton" />
                        <button @onclick="Buscar" class="btn btn-outline-primary" type="button" id="buscarButton">
                            <i class="oi oi-magnifying-glass" />
                        </button>
                    </div>
                </div>

                @*PrioridadId*@
                <div class="mb-3">
                    <label class="form-label">PrioridadId</label>
                    <InputNumber @bind-Value="prioridad.PrioridadId" class="form-control" />
                    <ValidationMessage For="@(() => prioridad.DiasCompromiso)" />
                </div>

                @*Descripcion*@
                <div class="mb-3">
                    <label class="form-label">Descripci&oacuten</label>
                    <InputText @bind-Value="prioridad.Descripcion" class="form-control" />
                    <ValidationMessage For="@(() => prioridad.Descripcion)" />
                </div>

                @*Dias Comprometidos*@
                <div class="mb-3">
                    <label class="form-label">D&iacuteas Comprometidos</label>
                    <InputNumber @bind-Value="prioridad.DiasCompromiso" class="form-control" />
                    <ValidationMessage For="@(() => prioridad.DiasCompromiso)" />
                </div>
            </div>

            <div class="card-footer d-flex justify-content-center">
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-primary" @onclick="Nuevo"> <i class="oi oi-file" /> Nuevo</button>
                    <button type="submit" class="btn btn-success"> <i class="oi oi-document" /> Guardar</button>
                    <button type="button" class="btn btn-danger" @onclick="Eliminar"><i class="oi oi-trash" /> Eliminar</button>
                </div>
            </div>
        </div>
    </div>

</EditForm>
<label>@Mensaje</label>

@code {
    [Parameter]
    public int id { get; set; }
    public Prioridades prioridad { get; set; } = new Prioridades();
    public string? Mensaje { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (id > 0)
        {
            this.prioridad.PrioridadId = id;
            await Buscar();
        }
    }

    public async Task Buscar()
    {
        var PrioridadEncotrada = await httpClient.GetFromJsonAsync<Prioridades>($"api/Prioridades/{prioridad.PrioridadId}");
        if (PrioridadEncotrada != null)
        {
            this.prioridad = PrioridadEncotrada;
            StateHasChanged();
        }
        else
        {
            Mensaje = "Prioridad no encontrado";
        }
    }

    public async void Guardar()
    {
        using var response = await httpClient.PostAsJsonAsync("api/Prioridades", prioridad);
        if (!response.IsSuccessStatusCode)
        {
            Mensaje = response.ReasonPhrase ?? "error";
            return;
        }
        var ticketDevuelto = await response.Content.ReadFromJsonAsync<Prioridades>();
        if (ticketDevuelto is not null)
        {
            prioridad = ticketDevuelto;
            StateHasChanged();
        }
    }

    public void Nuevo()
    {
        this.prioridad = new Prioridades();
        Mensaje = string.Empty;
    }

    public async Task Eliminar()
    {
        using var response = await httpClient.DeleteAsync($"api/Prioridades/{prioridad.PrioridadId}");
        if (!response.IsSuccessStatusCode)
        {
            Mensaje = response.ReasonPhrase ?? "error";
            return;
        }
        else
            Nuevo();
    }
}
